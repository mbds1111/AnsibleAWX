- name: Get Auth Token from SEPM
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/authToken?customerRegion=US
    method: Post
    body_format: json
    headers: 
        content-type: application/json
        Authorization: "{{ ESBAuth }}"
    status_code: 200, 201
    body: |-
          {
            "username" : "{{ SEPM_UN }}",
            "password" : "{{ SEPM_PW }}",
            "domain" : ""
          }
  register: AuthKey
  changed_when: "'token' in AuthKey.json"

- name: print response
  debug: 
    msg: "{{ AuthKey }}"

- name: Get group details for the snt code given
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/group?customerRegion=US&authToken={{ AuthKey.json.token }}&groupName={{ sntCode | upper }}&operator=contains
    method: Get
    body_format: json
    headers:
        content-type: application/json
        Authorization: "{{ ESBAuth }}"
    status_code: 200, 201
  when: AuthKey.json.token | length != 0
  register: groupId  

- name: print response
  debug: 
    msg: "{{ groupId }}"  
      
- name: Get computer details for the snt code given
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/computers?customerRegion=US&authToken={{ AuthKey.json.token }}&computerName={{ hostName }}
    method: Get
    body_format: json
    headers:
        content-type: application/json
        Authorization: "{{ ESBAuth }}"
    status_code: 200, 201
  register: compDetails

- name: print response
  debug: 
    msg: "{{ compDetails }}"

- name: Create group for the snt code given
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/groups/{{ sepmParentGroupId }}?customerRegion=US&authToken={{ AuthKey.json.token }}
    method: Post
    body_format: json
    headers:
        content-type: application/json
        Authorization: "{{ ESBAuth }}"
    status_code: 200, 201
    body: |-
          {
            "name" : "{{ customerName }} {{ sntCode | upper }}"
          }
  when: (compDetails.json.content.hardwareKey | length != 0) or (groupId.json.id == 0)
  register: createGroup

- name: Check group details created for the snt code given
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/group?customerRegion=US&authToken={{ AuthKey.json.token }}&groupName={{ sntCode | upper }}&operator=contains
    method: Get
    body_format: json
    headers:
        content-type: application/json
        Authorization: "{{ ESBAuth }}"
    status_code: 200, 201
  when: AuthKey.json.token | length != 0
  register: groupId1  

- name: Patch computer group details for the snt code given
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/computers?customerRegion=US&authToken={{ AuthKey.json.token }}
    method: PATCH
    body_format: json
    headers:
        content-type: application/json
        Authorization: "{{ Esb_Prd }}"
    status_code: 200, 201
    body: |-
          [
            {
              "group": {
              "id": "{{ groupId.json.id }}"
              },
              "hardwareKey": "{{ compDetails.json.content.hardwareKey }}"
            }
          ]
  when: not groupId.json.name is search("{{ sntCode | upper }}")

- name: patch group with new id for the snt code given
  uri:
    url: https://{{ ESBURL }}:{{ ESBPORT }}/services/sepm/computers?customerRegion=US&authToken={{ AuthKey.json.token }}
    method: PATCH
    body_format: json
    headers:
        content-type: application/json
        Authorization: "{{ ESBAuth }}"
    status_code: 200, 201
    body: |-
          [
            {
              "group": {
              "id": "{{ groupId1.json.id }}"
              },
              "hardwareKey": "{{ compDetails.json.content.hardwareKey }}"
            }
          ]
  when: groupId1.json.id | length != 0
